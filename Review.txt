--------------------------------
---Binary Search 16, Dec 2018---
--------------------------------
def binary_search(nums, target):
    if nums == None:
       return -1 // 

    left = 0
    right = len(nums) - 1
    while i + 1 < j:
        mid = left + (right - left) / 2
        if nums[mid] < target:
            left = mid + 1
            continue
        if nums[mid] > target:
            right = mid - 1
            continue
        if nums[mid] == target:
            return mid
            continue

    if nums[i] == target:
        return left
    else:
        return right

Problem:
63:  Search in Rotated Sorted Array 
75:  Find Peak Element
140: Fast Power
159: Find Minimum inRotated Sorted Array
428: Pow(x, n) *** 
447: Search in a Big Sorted Array
458: Last Position of Target
460: Find K Closest Elements
585: Maximum Number in Mountain Sequence

----------------------------------------
Binary Search & Two Poiners 17, Dec 2018
----------------------------------------
Problem:
**:https://github.com/ZhengkaiZ/Algorithm-Record/blob/master/Try/BinarySearch.py
56: Two Sum (Sorted or Not)
160: Find Minimum in Rotated Sorted Array II (Binary Search Not Working on this case)
228: Middle of the Linked List
608: Two Sum II Input array is sorted

----------------------------------------
Two Poiners & BFS 18, Dec 2018
----------------------------------------
Two Pointer Problem:
Merge Sort, Quick Sort, Quick Search 
57: 3Sum (Time to remove duplciate) 
143: Sort Colors II ***
521. Remove Duplicate Numbers in Array
539: Move Zeroes **
587: Two Sum - Unique pairs
609: Two Sum - Less than or equal to target

